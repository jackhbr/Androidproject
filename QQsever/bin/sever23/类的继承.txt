1.为什么要使用继承
	1.提高代码的重用性
	2.提高程序的扩展性
	
2.Java类继承类的语法格式
	Java中类继承类的关键字：extends
	格式：
	public class 类名(子类、派生类、超类)  extends 类名(父类、基类) {
		
	}
	注意：Java中类的继承是单继承，一个子类只能继承一个父类。
	
	生活中什么样的关系需要使用继承来实现呢？
		包含关系：
			学生包含大学生、高中生、初中生、小学生、...
			植物包含百合、玫瑰、...
	
3.子类继承到了父类的哪些内容
	子类可以继承到父类中所有的属性和方法(构造方法不能被继承)。
	
	访问修饰符是用来控制属性和方法在什么情况下是否能使用。
	访问修饰符		同类中		同包中		不同包中		不同包但是有继承关系的子类中
	private		可以			不可以		不可以		不可以
	默认的		可以			可以			不可以		不可以
	protected	可以			可以			不可以		可以
	public		可以			可以			可以			可以
	
	子类是否可以定义父类没有定义过的属性和方法呢？
		可以的
	
4.方法重写
	学生类中有学习方法，大学生类中也有学习方法，那么这两个方法是否完全一致呢？
		有可能会相同，也可以不同；如果不同怎么处理呢？使用方法重写来处理
		
	注意：private和final修饰的方法不能进行重写
		
	实现方法重写的条件是：
		1.必须要存在继承关系；
		2.子类在重写方法时，子类方法中的访问修饰符可以大于或者等于父类方法的访问修饰符；
		3.子类在重写方法时，子类方法的返回值类型，方法名以及参数必须要和父类完全一致。
	
	进行方法重写后，子类和父类都有同一个方法，那么如何调用呢？
		根据new关键字后的类名来判断，如果类名是子类，那么优先调用子类的方法，如果子类没有才会调用父类的方法。
	
场景：学校**老师教的是大学生的英语，那么这老师是否可以教高中生英语？初中生？小学生？如果学生种类增加到10种呢？100种呢？
	是可以的。
	
	老师{String name;  teach(学生){study() } } //teach(大学生){} teach(高中生){} teach(初中生){} teach(小学生){} 96 }
	学生{ String name;  study(){}  }
	大学生 extends 学生{  study(){} }
	高中生 extends 学生{   }
	初中生 extends 学生{   }
	小学生 extends 学生{   }
	96
	
5.练习
	1.奥特曼和小怪兽进行PK，直到一方的血量为0时结束战斗，输出谁胜利了！
		如果奥特曼胜利，则让奥特曼和另一个奥特曼对象进行PK，直到一方的血量为0时结束战斗，输出谁胜利了！
		如果小怪兽胜利，则让小怪兽和另一个哥斯拉对象进行PK，直到一方的血量为0时结束战斗，输出谁胜利了！
		要求：要使用继承中的内容来实现，类中只能有一个攻击方法，方法只能有一个参数，要实现攻击不同类型的对象。
		
		